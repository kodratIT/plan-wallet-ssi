@startuml Sphereon Wallet - Credential Management Subsystem
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()
LAYOUT_TOP_DOWN()

title Component Diagram: Credential Management Subsystem\n[Complete Verifiable Credential Lifecycle]

Container_Boundary(credential_subsystem, "Credential Management Subsystem") {

    Component(vc_handler, "VC Handler", "Core Orchestrator", "Verifiable Credential lifecycle management: handle offers, receive/verify/delete credentials, check revocation, coordinate issuance/verification flows")

    Container_Boundary(holder_module, "Credential Holder Module") {
        Component(credential_store, "Credential Store", "Storage Manager", "Store, retrieve, list, search, update and delete credentials with encryption, metadata extraction, and indexing by type/issuer/status")

        Component(credential_organizer, "Credential Organizer", "Organization Manager", "Tagging, categories, collections, favorites, and smart grouping of credentials")

        Component(credential_exporter, "Credential Exporter", "Import/Export Manager", "Export credentials in JSON, JWT, JSON-LD, QR, PDF formats. Import from various sources. Encrypted backup support")
    }

    Container_Boundary(verifier_module, "Credential Verifier Module") {
        Component(signature_verifier, "Signature Verifier", "Cryptographic Verification", "Verify JWT, JSON-LD and SD-JWT signatures using EdDSA, ES256K, ES256, ES384, RS256 algorithms")

        Component(issuer_verifier, "Issuer Verifier", "Trust Validation", "Validate issuer DID, check trust registries (EBSI, Sphereon), verify accreditation and reputation")

        Component(schema_validator, "Schema Validator", "Schema Validation", "Validate credentials against JSON Schema, JSON-LD Context, Credential Definition with caching")

        Component(revocation_checker, "Revocation Checker", "Revocation Validation", "Check Status List 2021, Revocation Registry, OCSP with periodic background checks and caching")

        Component(expiration_validator, "Expiration Validator", "Validity Period Check", "Check issuance/expiration dates, warn about expiring credentials, schedule notifications")
    }

    Container_Boundary(format_handlers, "Format Handlers") {
        Component(jwt_vc_handler, "JWT-VC Handler", "JWT Format Support", "Encode/decode JWT credentials, verify signatures. Compact, widely supported, URL-safe format")

        Component(jsonld_vc_handler, "JSON-LD VC Handler", "JSON-LD Format Support", "Handle JSON-LD credentials with Linked Data Proofs: Ed25519Signature2020, BbsBlsSignature2020")

        Component(sdjwt_handler, "SD-JWT Handler", "Selective Disclosure JWT", "Handle SD-JWT with selective disclosure, create presentations, verify holder binding")
    }

    Component(vc_issuer, "VC Issuer Module", "Self-Issued Credentials", "Issue self-attested credentials for personal info, contact details, social profiles")
}

System_Ext(did_resolver, "DID Resolver", "Resolve issuer DIDs")
System_Ext(trust_registries, "Trust Registries", "EBSI, Sphereon, Custom lists")
System_Ext(schema_repositories, "Schema Repositories", "JSON Schema, JSON-LD contexts")
System_Ext(revocation_registries, "Revocation Registries", "Status List 2021, Revocation Lists")
System_Ext(credential_storage, "Credential Storage", "TypeORM + SQLite")
System_Ext(kms, "Key Management System", "Signing operations")

Rel(vc_handler, jwt_vc_handler, "Routes JWT credentials")
Rel(vc_handler, jsonld_vc_handler, "Routes JSON-LD credentials")
Rel(vc_handler, sdjwt_handler, "Routes SD-JWT credentials")
Rel(vc_handler, credential_store, "Stores credentials")
Rel(vc_handler, signature_verifier, "Verifies signatures")
Rel(vc_handler, issuer_verifier, "Validates issuers")
Rel(vc_handler, schema_validator, "Validates schemas")
Rel(vc_handler, revocation_checker, "Checks revocation")
Rel(vc_handler, expiration_validator, "Validates expiration")

Rel(credential_store, credential_organizer, "Organization data")
Rel(credential_store, credential_exporter, "Export data")
Rel(credential_store, credential_storage, "Persists data")

Rel(signature_verifier, did_resolver, "Resolves issuer DIDs")
Rel(signature_verifier, kms, "Verifies signatures")

Rel(issuer_verifier, trust_registries, "Queries trust status")
Rel(issuer_verifier, did_resolver, "Resolves DIDs")

Rel(schema_validator, schema_repositories, "Fetches schemas")
Rel(revocation_checker, revocation_registries, "Checks status")

Rel(jwt_vc_handler, signature_verifier, "Signature verification")
Rel(jsonld_vc_handler, signature_verifier, "Signature verification")
Rel(sdjwt_handler, signature_verifier, "Signature verification")

Rel(vc_issuer, kms, "Signs credentials")
Rel(vc_issuer, credential_store, "Stores issued credentials")
Rel(vc_issuer, jwt_vc_handler, "Encodes as JWT")

SHOW_LEGEND()

@enduml
